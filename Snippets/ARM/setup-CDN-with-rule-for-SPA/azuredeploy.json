{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceNamePrefix": {
            "type": "string",
            "defaultValue": "customer-project",
            "metadata": {
                "description": "The prefix will be used for every parameter that represents a resource name. See the description of the parameter."
            }
        },
        "resourceNameSuffix": {
            "type": "string",
            "metadata": {
                "description": "The suffix will be appended to every parameter that represents a resource name. See the description of the parameter."
            }
        }
    },
    "variables": {
        "logAnalyticsWsName": "[concat(parameters('resourceNamePrefix'), '-', 'law', '-', parameters('resourceNameSuffix'))]",
        "appInsightsName": "[concat(parameters('resourceNamePrefix'), '-', 'ai', '-', parameters('resourceNameSuffix'))]",
        
        "keyVaultName": "[concat(parameters('resourceNamePrefix'), '-kv', '-', parameters('resourceNameSuffix'))]",
        "keyVaultSecretStorageAccountConnectionString": "storageAccountConnectionString",
        
        "storageAccountName": "[replace(concat(parameters('resourceNamePrefix'), '-', 'sa', '-', parameters('resourceNameSuffix')), '-', '')]",
        "storageAccountRegionalCodes": {
            "westeurope": "z6",
            "switzerlandnorth": "z1"
        },
        
        "cdnProfileName": "[concat(parameters('resourceNamePrefix'), '-', 'cdn', '-', parameters('resourceNameSuffix'))]",
        "cdnEndpointName": "[concat(parameters('resourceNamePrefix'), '-', 'cdn-ep', '-', parameters('resourceNameSuffix'))]",
        "cdnEndpointOriginHost": "[concat(variables('storageAccountName'), '.', variables('storageAccountRegionalCodes')[resourceGroup().location], '.web.core.windows.net')]",
        "cdnEndpointOriginName": "[concat(variables('storageAccountName'), '-static-website')]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "name": "pid-d16e7b59-716a-407d-96db-18d1cac40407",
            "apiVersion": "2020-06-01",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[variables('logAnalyticsWsName')]",
            "apiVersion": "2020-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('appInsightsName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            ],
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "apiVersion": "2019-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForTemplateDeployment": true,
                "accessPolicies": []
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(variables('keyVaultName'), '/Microsoft.Insights/', 'LogAnalytics')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            ],
            "properties": {
                "name": "LogAnalytics",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
                "logs": [
                    {
                        "category": "AuditEvent",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', variables('keyVaultSecretStorageAccountConnectionString'))]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            }
        },
        {
            "type": "Microsoft.Cdn/profiles",
            "name": "[variables('cdnProfileName')]",
            "apiVersion": "2020-04-15",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_Microsoft"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Cdn/profiles/providers/diagnosticSettings",
            "name": "[concat(variables('cdnProfileName'), '/Microsoft.Insights/', 'LogAnalytics')]",
            "apiVersion": "2017-05-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('cdnProfileName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            ],
            "properties": {
                "name": "LogAnalytics",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
                "logs": [
                    {
                        "category": "AzureCdnAccessLog",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Cdn/profiles/endpoints",
            "apiVersion": "2020-04-15",
            "name": "[concat(variables('cdnProfileName'), '/', variables('cdnEndpointName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('cdnProfileName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "originHostHeader": "[variables('cdnEndpointOriginHost')]",
                "isHttpAllowed": true,
                "isHttpsAllowed": true,
                "queryStringCachingBehavior": "IgnoreQueryString",
                "origins": [
                    {
                        "name": "[variables('cdnEndpointOriginName')]",
                        "properties": {
                            "hostName": "[variables('cdnEndpointOriginHost')]",
                            "originHostHeader": "[variables('cdnEndpointOriginHost')]",
                            "priority": 1,
                            "weight": 1000,
                            "enabled": true
                        }
                    }
                ],
                "optimizationType": "GeneralWebDelivery",
                "geoFilters": [],
                "deliveryPolicy": {
                    "rules": [
                        {
                            "name": "http2https",
                            "order": 1,
                            "conditions": [
                                {
                                    "name": "RequestScheme",
                                    "parameters": {
                                        "@odata.type": "#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestSchemeConditionParameters",
                                        "operator": "Equal",
                                        "negateCondition": false,
                                        "matchValues": [
                                            "HTTP"
                                        ]
                                    }
                                }
                            ],
                            "actions": [
                                {
                                    "name": "UrlRedirect",
                                    "parameters": {
                                        "@odata.type": "#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlRedirectActionParameters",
                                        "redirectType": "Moved",
                                        "destinationProtocol": "Https"
                                    }
                                }
                            ]
                        },
                        {
                            "name": "SpaSubRouting",
                            "order": 2,
                            "conditions": [
                                {
                                    "name": "UrlFileExtension",
                                    "parameters": {
                                        "@odata.type": "#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlFileExtensionMatchConditionParameters",
                                        "operator": "GreaterThan",
                                        "negateCondition": true,
                                        "matchValues": [
                                            "0"
                                        ],
                                        "transforms": []
                                    }
                                }
                            ],
                            "actions": [
                                {
                                    "name": "UrlRewrite",
                                    "parameters": {
                                        "@odata.type": "#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlRewriteActionParameters",
                                        "sourcePattern": "/",
                                        "destination": "/index.html",
                                        "preserveUnmatchedPath": false
                                    }
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Cdn/profiles/endpoints/origins",
            "name": "[concat(variables('cdnProfileName'), '/', variables('cdnEndpointName'), '/', variables('cdnEndpointOriginName'))]",
            "apiVersion": "2020-04-15",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/endpoints', variables('cdnProfileName'), variables('cdnEndpointName'))]"
            ],
            "properties": {
                "hostName": "[variables('cdnEndpointOriginHost')]",
                "enabled": true,
                "priority": 1,
                "weight": 1000,
                "originHostHeader": "[variables('cdnEndpointOriginHost')]"
            }
        },
        {
            "type": "Microsoft.Cdn/profiles/endpoints/providers/diagnosticSettings",
            "name": "[concat(variables('cdnProfileName'), '/', variables('cdnEndpointName'), '/Microsoft.Insights/', 'LogAnalytics')]",
            "apiVersion": "2017-05-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/endpoints', variables('cdnProfileName'), variables('cdnEndpointName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            ],
            "properties": {
                "name": "LogAnalytics",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
                "logs": [
                    {
                        "category": "CoreAnalytics",
                        "enabled": true
                    }
                ]
            }
        }
    ],
    "outputs": {
        "storageAccountWebEndpoint": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01', 'Full').properties.primaryEndpoints.web]"
        }
    }
}
