{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "14551500548709974248"
    }
  },
  "parameters": {
    "resourceNamePrefix": {
      "type": "string",
      "defaultValue": "customer-project",
      "metadata": {
        "description": "The prefix will be used for every parameter that represents a resource name."
      }
    },
    "resourceNameSuffix": {
      "type": "string",
      "metadata": {
        "description": "The suffix will be appended to every resource name. You have to specify a unique, not yet used, value."
      }
    },
    "cosmosDbEnableFreeTier": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Can only be activated once per subscription. Ignored when Synapse Workspace is not deployed (then serverless tier is choosen)."
      }
    },
    "cosmosDbEnableAutoscale": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Only considered if free tier is not activated and Synapse Workspace is deployed."
      }
    },
    "cosmosDbProvisionedThroughput": {
      "type": "int",
      "defaultValue": 400,
      "maxValue": 4000,
      "minValue": 400,
      "metadata": {
        "description": "Applied when not autoscale or serverless tier is active."
      }
    },
    "cosmosDbEnableSynapseLink": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If disabled, Cosmos DB will be deployed in serverless tier (not supported with Synapse Link)."
      }
    }
  },
  "functions": [],
  "variables": {
    "logAnalyticsWsName": "[format('{0}-law-{1}', parameters('resourceNamePrefix'), parameters('resourceNameSuffix'))]",
    "cosmosDbAccountName": "[format('{0}-cdb-{1}', parameters('resourceNamePrefix'), parameters('resourceNameSuffix'))]",
    "cosmosDbDatabase": "DemoData",
    "cosmosDbContainers": [
      "Foo",
      "Bar"
    ],
    "cosmosDbSettingFreeTier": "[and(not(parameters('cosmosDbEnableSynapseLink')), parameters('cosmosDbEnableFreeTier'))]",
    "cosmosDbSettingCapabilities": "[if(not(parameters('cosmosDbEnableSynapseLink')), createArray(createObject('name', 'EnableServerless')), createArray())]",
    "cosmosDbScaleOptions": "[if(and(not(variables('cosmosDbSettingFreeTier')), parameters('cosmosDbEnableAutoscale')), createObject('autoscaleSettings', createObject('maxThroughput', 4000)), createObject('throughput', parameters('cosmosDbProvisionedThroughput')))]",
    "cosmosDbSettingOptions": "[if(parameters('cosmosDbEnableSynapseLink'), variables('cosmosDbScaleOptions'), createObject())]",
    "cosmosDbSettingBackupPolicy": "[if(parameters('cosmosDbEnableSynapseLink'), createObject('type', 'Periodic', 'periodicModeProperties', createObject('backupIntervalInMinutes', 240, 'backupRetentionIntervalInHours', 8)), createObject('type', 'Continuous'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "pid-d16e7b59-716a-407d-96db-18d1cac40407",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[variables('logAnalyticsWsName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-06-15",
      "name": "[variables('cosmosDbAccountName')]",
      "location": "[resourceGroup().location]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "publicNetworkAccess": "Enabled",
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "enableFreeTier": "[variables('cosmosDbSettingFreeTier')]",
        "enableAnalyticalStorage": "[parameters('cosmosDbEnableSynapseLink')]",
        "createMode": "Default",
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capabilities": "[variables('cosmosDbSettingCapabilities')]",
        "backupPolicy": "[variables('cosmosDbSettingBackupPolicy')]"
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', variables('cosmosDbAccountName'))]",
      "name": "LogAnalytics",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
        "logs": [
          {
            "category": "QueryRuntimeStatistics",
            "enabled": true
          },
          {
            "category": "PartitionKeyStatistics",
            "enabled": true
          },
          {
            "category": "PartitionKeyRUConsumption",
            "enabled": true
          },
          {
            "category": "ControlPlaneRequests",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "Requests",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-06-15",
      "name": "[format('{0}/{1}', variables('cosmosDbAccountName'), variables('cosmosDbDatabase'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbDatabase')]"
        },
        "options": "[variables('cosmosDbSettingOptions')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
      ]
    },
    {
      "copy": {
        "name": "cosmosDbContainersRes",
        "count": "[length(variables('cosmosDbContainers'))]"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-06-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbAccountName'), variables('cosmosDbDatabase'), variables('cosmosDbContainers')[copyIndex()])]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbContainers')[copyIndex()]]",
          "indexingPolicy": {
            "automatic": true,
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/PartitionKey"
            ],
            "kind": "Hash"
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          },
          "analyticalStorageTtl": "[if(parameters('cosmosDbEnableSynapseLink'), -1, 0)]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/{1}', variables('cosmosDbAccountName'), variables('cosmosDbDatabase')), '/')[0], split(format('{0}/{1}', variables('cosmosDbAccountName'), variables('cosmosDbDatabase')), '/')[1])]"
      ]
    }
  ],
  "outputs": {
    "cosmosAccountConnectionString": {
      "type": "string",
      "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2021-06-15').connectionStrings[0].connectionString]"
    }
  }
}