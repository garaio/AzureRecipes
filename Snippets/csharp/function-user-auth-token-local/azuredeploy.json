{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
        "resourceNamePrefix": {
            "type": "string",
            "defaultValue": "customer-project",
            "metadata": {
                "description": "The prefix will be used for every parameter that represents a resource name. See the description of the parameter."
            }
        },
        "resourceNameSuffix": {
            "type": "string",
            "metadata": {
                "description": "The suffix will be appended to every parameter that represents a resource name. See the description of the parameter."
            }
        },
        "funcAppAuthClientId": {
            "defaultValue": "00000000-0000-0000-0000-000000000000",
            "type": "string"
        },
        "funcAppAuthClientSecret": {
            "defaultValue": "blank",
            "type": "securestring"
        },
        "funcAppAuthClientTenantId": {
            "defaultValue": "[subscription().tenantId]",
            "type": "string"
        }
	},
	"variables": {
		"logAnalyticsWsName": "[concat(parameters('resourceNamePrefix'), '-', 'law', '-', parameters('resourceNameSuffix'))]",
        "appInsightsName": "[concat(parameters('resourceNamePrefix'), '-', 'ai', '-', parameters('resourceNameSuffix'))]",
		
        "keyVaultName": "[concat(parameters('resourceNamePrefix'), '-kv', '-', parameters('resourceNameSuffix'))]",        
        "keyVaultSecretStorageAccountConnectionString": "storageAccountConnectionString",
        "keyVaultSecretFuncAppAuthClientSecret": "funcAppAuthClientSecret",

        "storageAccountName": "[replace(concat(parameters('resourceNamePrefix'), '-', 'sa', '-', parameters('resourceNameSuffix')), '-', '')]",
		
        "appServicePlanName": "[concat(parameters('resourceNamePrefix'), '-', 'asp', '-', parameters('resourceNameSuffix'))]",

        "serviceFuncName": "[concat(parameters('resourceNamePrefix'), '-', 'service-f', '-', parameters('resourceNameSuffix'))]"
	},
	"resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "apiVersion": "2019-06-01",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[variables('logAnalyticsWsName')]",
            "apiVersion": "2020-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
				"retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('appInsightsName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            ],
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "ApplicationId": "[variables('appInsightsName')]",
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            }
        },     
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "apiVersion": "2019-09-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForTemplateDeployment": true,
                "accessPolicies": []
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(variables('keyVaultName'), '/Microsoft.Insights/', 'LogAnalytics')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            ],
            "properties": {
                "name": "LogAnalytics",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
                "logs": [
                    {
                        "category": "AuditEvent",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', variables('keyVaultSecretStorageAccountConnectionString'))]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', variables('keyVaultSecretFuncAppAuthClientSecret'))]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('funcAppAuthClientSecret')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(variables('keyVaultName'), '/add')]",
            "apiVersion": "2019-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('serviceFuncName')), '2019-08-01', 'Full').identity.principalId]",
                        "permissions": {
                            "keys": [ "get" ],
                            "secrets": [ "get" ]
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('serviceFuncName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "name": "[variables('appServicePlanName')]",
            "apiVersion": "2020-09-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "name": "[variables('serviceFuncName')]",
            "apiVersion": "2020-09-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('serviceFuncName'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('serviceFuncName'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "clientAffinityEnabled": true,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "siteConfig": {
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    }
                }
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('serviceFuncName'), '/appsettings')]",
            "apiVersion": "2020-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('serviceFuncName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultSecretFuncAppAuthClientSecret'))]"
            ],
            "properties": {
                "AzureWebJobsStorage": "[concat('@Microsoft.KeyVault(VaultName=', variables('keyVaultName'), ';SecretName=', variables('keyVaultSecretStorageAccountConnectionString'), ')')]",
                "AzureWebJobsDisableHomepage": true,
                "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey]",
                "FUNCTIONS_EXTENSION_VERSION": "~3",
                "WEBSITE_TIME_ZONE": "W. Europe Standard Time",
                "WEBSITE_CONTENTSHARE": "[variables('serviceFuncName')]",
                "MICROSOFT_PROVIDER_AUTHENTICATION_SECRET": "[concat('@Microsoft.KeyVault(VaultName=', variables('keyVaultName'), ';SecretName=', variables('keyVaultSecretFuncAppAuthClientSecret'), ')')]",
                "StorageConnectionString": "[concat('@Microsoft.KeyVault(VaultName=', variables('keyVaultName'), ';SecretName=', variables('keyVaultSecretStorageAccountConnectionString'), ')')]",
				"LoadFuncSchedule": "0 */5 * * * *"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('serviceFuncName'), '/authsettingsV2')]",
            "apiVersion": "2020-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('serviceFuncName'))]"
            ],
            "properties": {
				"platform": {
                    "enabled": true
                },
                "globalValidation": {
                    "unauthenticatedClientAction": "AllowAnonymous"
                },
                "identityProviders": {
                    "azureActiveDirectory": {
                        "enabled": true,
                        "registration": {
                            "openIdIssuer": "[concat('https://sts.windows.net/', parameters('funcAppAuthClientTenantId'), '/v2.0')]",
                            "clientId": "[parameters('funcAppAuthClientId')]",
							"isAutoProvisioned": true
                        }
                    }
                }
            }
        }
	],
	"outputs": {}
}