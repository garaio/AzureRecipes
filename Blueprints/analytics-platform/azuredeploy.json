{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "3703011294487633803"
    }
  },
  "parameters": {
    "resourceNamePrefix": {
      "type": "string",
      "defaultValue": "customer-project",
      "metadata": {
        "description": "The prefix will be used for every parameter that represents a resource name. See the description of the parameter."
      }
    },
    "resourceNameSuffix": {
      "type": "string",
      "metadata": {
        "description": "The suffix will be appended to every parameter that represents a resource name. See the description of the parameter."
      }
    },
    "resourceLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "synapseIdentityType": {
      "type": "string",
      "defaultValue": "Group",
      "allowedValues": [
        "User",
        "Group"
      ]
    },
    "synapseIdentityId": {
      "type": "string",
      "defaultValue": "00000000-0000-0000-0000-000000000000"
    },
    "deployLogicApps": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Generate logic app resources based on linked templates"
      }
    }
  },
  "variables": {
    "logAnalyticsWsName": "[format('{0}-law-{1}', parameters('resourceNamePrefix'), parameters('resourceNameSuffix'))]",
    "keyVaultName": "[format('{0}-kv-{1}', parameters('resourceNamePrefix'), parameters('resourceNameSuffix'))]",
    "blobContainerDeployment": "deployment",
    "storageAccountName": "[replace(format('{0}-sa-{1}', parameters('resourceNamePrefix'), parameters('resourceNameSuffix')), '-', '')]",
    "storageAccountBlobs": [
      {
        "name": "[variables('blobContainerDeployment')]",
        "publicAccess": "None"
      }
    ],
    "storageAccountFunctionSasParams": {
      "signedServices": "b",
      "signedResourceTypes": "o",
      "signedPermission": "r",
      "signedExpiry": "2050-01-01T00:00:00Z"
    },
    "storageAccountBlobUri": "[format('https://{0}.blob.{1}/', variables('storageAccountName'), environment().suffixes.storage)]",
    "dataLakeStorageName": "[replace(format('{0}-dls-{1}', parameters('resourceNamePrefix'), parameters('resourceNameSuffix')), '-', '')]",
    "dataLakeFilesystemName": "workspace",
    "synapseWorkspaceName": "[format('{0}-sw-{1}', parameters('resourceNamePrefix'), parameters('resourceNameSuffix'))]",
    "synapseSqlAdminUser": "sqladminuser",
    "synapseBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
    "synapseResourceGroupName": "[format('{0}-synapse-internal-{1}', parameters('resourceNamePrefix'), parameters('resourceNameSuffix'))]",
    "logicAppFileIntegrationName": "[format('{0}-fi-la-{1}', parameters('resourceNamePrefix'), parameters('resourceNameSuffix'))]",
    "logicAppFileIntegrationDefUri": "[format('{0}{1}/LogicApps/file-integration.json', variables('storageAccountBlobUri'), variables('blobContainerDeployment'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "pid-d16e7b59-716a-407d-96db-18d1cac40407",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('resourceLocation')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "copy": {
        "name": "storageAccountBlobContainerRes",
        "count": "[length(variables('storageAccountBlobs'))]"
      },
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountBlobs')[copyIndex()].name)]",
      "properties": {
        "publicAccess": "[variables('storageAccountBlobs')[copyIndex()].publicAccess]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[variables('logAnalyticsWsName')]",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForTemplateDeployment": true,
        "accessPolicies": []
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "LogAnalytics",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
        "logs": [
          {
            "category": "AuditEvent",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('dataLakeStorageName')]",
      "location": "[parameters('resourceLocation')]",
      "tags": {
        "Type": "Synapse Data Lake Storage"
      },
      "sku": {
        "name": "Standard_RAGRS"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/default', variables('dataLakeStorageName'))]",
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeStorageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/{1}', format('{0}/default', variables('dataLakeStorageName')), variables('dataLakeFilesystemName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', split(format('{0}/default', variables('dataLakeStorageName')), '/')[0], split(format('{0}/default', variables('dataLakeStorageName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('dataLakeStorageName'))]",
      "name": "[guid(format('{0}/{1}/{2}', resourceGroup().id, variables('synapseBlobDataContributorRoleID'), variables('synapseWorkspaceName')))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('synapseBlobDataContributorRoleID'))]",
        "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', variables('synapseWorkspaceName')), '2021-03-01', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeStorageName'))]",
        "[resourceId('Microsoft.Synapse/workspaces', variables('synapseWorkspaceName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('synapseIdentityId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('dataLakeStorageName'))]",
      "name": "[guid(format('{0}/{1}/{2}', resourceGroup().id, variables('synapseBlobDataContributorRoleID'), parameters('synapseIdentityId')))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('synapseBlobDataContributorRoleID'))]",
        "principalId": "[parameters('synapseIdentityId')]",
        "principalType": "[parameters('synapseIdentityType')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeStorageName'))]"
      ]
    },
    {
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2021-03-01",
      "name": "[variables('synapseWorkspaceName')]",
      "location": "[parameters('resourceLocation')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[format('https://{0}.dfs.{1}', variables('dataLakeStorageName'), environment().suffixes.storage)]",
          "filesystem": "[variables('dataLakeFilesystemName')]"
        },
        "virtualNetworkProfile": {
          "computeSubnetId": ""
        },
        "sqlAdministratorLogin": "[variables('synapseSqlAdminUser')]",
        "managedResourceGroupName": "[variables('synapseResourceGroupName')]"
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces/firewallRules",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/allowAll', variables('synapseWorkspaceName'))]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', variables('synapseWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Synapse/workspaces/managedIdentitySqlControlSettings",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/default', variables('synapseWorkspaceName'))]",
      "properties": {
        "grantSqlControlToManagedIdentity": {
          "desiredState": "Enabled"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', variables('synapseWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.Synapse/workspaces/{0}', variables('synapseWorkspaceName'))]",
      "name": "LogAnalytics",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
        "logs": [
          {
            "category": "SynapseRbacOperations",
            "enabled": true
          },
          {
            "category": "GatewayApiRequests",
            "enabled": true
          },
          {
            "category": "BuiltinSqlReqsEnded",
            "enabled": true
          },
          {
            "category": "IntegrationPipelineRuns",
            "enabled": true
          },
          {
            "category": "IntegrationActivityRuns",
            "enabled": true
          },
          {
            "category": "IntegrationTriggerRuns",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
        "[resourceId('Microsoft.Synapse/workspaces', variables('synapseWorkspaceName'))]"
      ]
    },
    {
      "condition": "[parameters('deployLogicApps')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-01-01",
      "name": "[variables('logicAppFileIntegrationName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[format('{0}?{1}', variables('logicAppFileIntegrationDefUri'), listAccountSas(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01', variables('storageAccountFunctionSasParams')).accountSasToken)]"
        },
        "parameters": {
          "LogicAppName": {
            "value": "[variables('logicAppFileIntegrationName')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.Resources/deployments/{0}', variables('logicAppFileIntegrationName'))]",
      "name": "LogAnalytics",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
        "logs": [
          {
            "category": "WorkflowRuntime",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('logicAppFileIntegrationName'))]"
      ]
    }
  ]
}